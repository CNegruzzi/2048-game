{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\n'use strict';\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n'use strict';\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState;\n        this.score = 0;\n        this.status = 'idle';\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status !== 'playing') return false;\n                var oldBoard = JSON.stringify(this.board);\n                var shiftAndFilter = function(array) {\n                    var filteredArray = array.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(filteredArray.length < 4)filteredArray.push(0);\n                    return filteredArray;\n                };\n                for(var row = 0; row < 4; row++){\n                    this.board[row] = shiftAndFilter(this.board[row]);\n                    for(var col = 0; col < 3; col++)if (this.board[row][col] === this.board[row][col + 1]) {\n                        this.board[row][col] += this.board[row][col + 1];\n                        this.board[row][col + 1] = 0;\n                        this.score += this.board[row][col];\n                        col++;\n                    }\n                    this.board[row] = shiftAndFilter(this.board[row]);\n                }\n                var newBoard = JSON.stringify(this.board);\n                return oldBoard !== newBoard;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var oldBoard = JSON.stringify(this.board);\n                var shiftAndFilter = function(array) {\n                    var filteredArray = array.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(filteredArray.length < 4)filteredArray.unshift(0);\n                    return filteredArray;\n                };\n                for(var row = 0; row < 4; row++){\n                    this.board[row] = shiftAndFilter(this.board[row]);\n                    for(var col = 0; col < 3; col++)if (this.board[row][col] === this.board[row][col + 1]) {\n                        this.board[row][col] += this.board[row][col + 1];\n                        this.board[row][col + 1] = 0;\n                        this.score += this.board[row][col];\n                        col++;\n                    }\n                    this.board[row] = shiftAndFilter(this.board[row]);\n                }\n                var newBoard = JSON.stringify(this.board);\n                return oldBoard !== newBoard;\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var oldBoard = JSON.stringify(this.board);\n                var shiftAndFilter = function(array) {\n                    var filteredArray = array.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(filteredArray.length < 4)filteredArray.push(0);\n                    return filteredArray;\n                };\n                for(var col = 0; col < 4; col++){\n                    var column = [];\n                    for(var row = 0; row < 4; row++)column.push(this.board[row][col]);\n                    column = shiftAndFilter(column);\n                    for(var r = 0; r < 3; r++)if (column[r] === column[r + 1]) {\n                        column[r] += column[r + 1];\n                        column[r + 1] = 0;\n                        this.score += column[r];\n                        r++;\n                    }\n                    column = shiftAndFilter(column);\n                    for(var rowIndex = 0; rowIndex < 4; rowIndex++)this.board[rowIndex][col] = column[rowIndex];\n                }\n                var newBoard = JSON.stringify(this.board);\n                return oldBoard !== newBoard;\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var oldBoard = JSON.stringify(this.board);\n                var shiftAndFilter = function(array) {\n                    var filteredArray = array.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(filteredArray.length < 4)filteredArray.push(0);\n                    return filteredArray;\n                };\n                for(var col = 0; col < 4; col++){\n                    var column = [];\n                    for(var row = 0; row < 4; row++)column.push(this.board[row][col]);\n                    column.reverse();\n                    column = shiftAndFilter(column);\n                    for(var r = 0; r < 3; r++)if (column[r] === column[r + 1]) {\n                        column[r] += column[r + 1];\n                        column[r + 1] = 0;\n                        this.score += column[r];\n                        r++;\n                    }\n                    column = shiftAndFilter(column);\n                    column.reverse();\n                    for(var rowIndex = 0; rowIndex < 4; rowIndex++)this.board[rowIndex][col] = column[rowIndex];\n                }\n                var newBoard = JSON.stringify(this.board);\n                return oldBoard !== newBoard;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 2048) {\n                        this.status = 'win';\n                        return this.status;\n                    }\n                }\n                var hasEmptyTiles = this.board.some(function(row) {\n                    return row.includes(0);\n                });\n                if (!hasEmptyTiles) {\n                    var canMove = function(board) {\n                        for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                            if (col < 3 && board[row][col] === board[row][col + 1] || row < 3 && board[row][col] === board[row + 1][col]) return true;\n                        }\n                        return false;\n                    };\n                    if (!canMove(this.board)) {\n                        this.status = 'lose';\n                        return this.status;\n                    }\n                }\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status === 'idle') {\n                    this.board = [\n                        [\n                            0,\n                            0,\n                            0,\n                            0\n                        ],\n                        [\n                            0,\n                            0,\n                            0,\n                            0\n                        ],\n                        [\n                            0,\n                            0,\n                            0,\n                            0\n                        ],\n                        [\n                            0,\n                            0,\n                            0,\n                            0\n                        ]\n                    ];\n                    this.score = 0;\n                }\n                this.status = 'playing';\n                this.addRandomTiles();\n                this.addRandomTiles();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                this.status = 'idle';\n            }\n        },\n        {\n            key: \"addRandomTiles\",\n            value: function addRandomTiles() {\n                var emptyTiles = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 0) emptyTiles.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                var randomCell = emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n                this.board[randomCell.row][randomCell.col] = Math.random() < 0.9 ? 2 : 4;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$mainScore = document.querySelector('.game-score');\nvar $197cd56b15c33885$var$startButton = document.querySelector('.button.start');\nvar $197cd56b15c33885$var$messageWin = document.querySelector('.message-win');\nvar $197cd56b15c33885$var$messageLose = document.querySelector('.message-lose');\nvar $197cd56b15c33885$var$messageStart = document.querySelector('.message-start');\nfunction $197cd56b15c33885$var$renderGame() {\n    var boardState = $197cd56b15c33885$var$game.getState();\n    var cells = document.querySelectorAll('.field-cell');\n    cells.forEach(function(cell, index) {\n        var row = Math.floor(index / 4);\n        var col = index % 4;\n        var value = boardState[row][col];\n        cell.textContent = value === 0 ? '' : value;\n        cell.className = 'field-cell';\n        if (value) {\n            cell.classList.add(\"field-cell--\".concat(value));\n            if (value === 2 || value === 4) cell.classList.add('new');\n        }\n    });\n    $197cd56b15c33885$var$mainScore.textContent = $197cd56b15c33885$var$game.getScore();\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    $197cd56b15c33885$var$messageWin.classList.toggle('hidden', gameStatus !== 'win');\n    $197cd56b15c33885$var$messageLose.classList.toggle('hidden', gameStatus !== 'lose');\n    $197cd56b15c33885$var$messageStart.classList.toggle('hidden', gameStatus !== 'idle');\n}\n$197cd56b15c33885$var$startButton.addEventListener('click', function() {\n    if ($197cd56b15c33885$var$startButton.classList.contains('start')) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$renderGame();\n        $197cd56b15c33885$var$startButton.classList.remove('start');\n        $197cd56b15c33885$var$startButton.classList.add('restart');\n        $197cd56b15c33885$var$startButton.textContent = 'Restart';\n    } else if ($197cd56b15c33885$var$startButton.classList.contains('restart')) {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$renderGame();\n        $197cd56b15c33885$var$startButton.classList.remove('restart');\n        $197cd56b15c33885$var$startButton.classList.add('start');\n        $197cd56b15c33885$var$startButton.textContent = 'Start';\n    }\n});\ndocument.addEventListener('keydown', function(gameEvent) {\n    if ($197cd56b15c33885$var$game.getStatus() !== 'playing') return;\n    gameEvent.preventDefault();\n    var moved = false;\n    var oldBoardState = JSON.stringify($197cd56b15c33885$var$game.getState());\n    switch(gameEvent.key){\n        case 'ArrowUp':\n            moved = $197cd56b15c33885$var$game.moveUp();\n            break;\n        case 'ArrowDown':\n            moved = $197cd56b15c33885$var$game.moveDown();\n            break;\n        case 'ArrowLeft':\n            moved = $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case 'ArrowRight':\n            moved = $197cd56b15c33885$var$game.moveRight();\n            break;\n    }\n    var newBoardState = JSON.stringify($197cd56b15c33885$var$game.getState());\n    if (moved && oldBoardState !== newBoardState) {\n        $197cd56b15c33885$var$game.addRandomTiles();\n        $197cd56b15c33885$var$renderGame();\n    }\n});\n$197cd56b15c33885$var$renderGame();\n\n})();\n//# sourceMappingURL=2048-game.63b28bbb.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst mainScore = document.querySelector('.game-score');\nconst startButton = document.querySelector('.button.start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\n\nfunction renderGame() {\n  const boardState = game.getState();\n  const cells = document.querySelectorAll('.field-cell');\n\n  cells.forEach((cell, index) => {\n    const row = Math.floor(index / 4);\n    const col = index % 4;\n    const value = boardState[row][col];\n\n    cell.textContent = value === 0 ? '' : value;\n    cell.className = 'field-cell';\n\n    if (value) {\n      cell.classList.add(`field-cell--${value}`);\n\n      if (value === 2 || value === 4) {\n        cell.classList.add('new');\n      }\n    }\n  });\n\n  mainScore.textContent = game.getScore();\n\n  const gameStatus = game.getStatus();\n\n  messageWin.classList.toggle('hidden', gameStatus !== 'win');\n  messageLose.classList.toggle('hidden', gameStatus !== 'lose');\n  messageStart.classList.toggle('hidden', gameStatus !== 'idle');\n}\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('start')) {\n    game.start();\n    renderGame();\n\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n  } else if (startButton.classList.contains('restart')) {\n    game.restart();\n    renderGame();\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n    startButton.textContent = 'Start';\n  }\n});\n\ndocument.addEventListener('keydown', (gameEvent) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  gameEvent.preventDefault();\n\n  let moved = false;\n\n  const oldBoardState = JSON.stringify(game.getState());\n\n  switch (gameEvent.key) {\n    case 'ArrowUp':\n      moved = game.moveUp();\n      break;\n\n    case 'ArrowDown':\n      moved = game.moveDown();\n      break;\n\n    case 'ArrowLeft':\n      moved = game.moveLeft();\n      break;\n\n    case 'ArrowRight':\n      moved = game.moveRight();\n      break;\n  }\n\n  const newBoardState = JSON.stringify(game.getState());\n\n  if (moved && oldBoardState !== newBoardState) {\n    game.addRandomTiles();\n    renderGame();\n  }\n});\n\nrenderGame();\n","'use strict';\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.board = initialState;\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return false;\n    }\n\n    const oldBoard = JSON.stringify(this.board);\n\n    const shiftAndFilter = (array) => {\n      const filteredArray = array.filter((cell) => cell !== 0);\n\n      while (filteredArray.length < 4) {\n        filteredArray.push(0);\n      }\n\n      return filteredArray;\n    };\n\n    for (let row = 0; row < 4; row++) {\n      this.board[row] = shiftAndFilter(this.board[row]);\n\n      for (let col = 0; col < 3; col++) {\n        if (this.board[row][col] === this.board[row][col + 1]) {\n          this.board[row][col] += this.board[row][col + 1];\n          this.board[row][col + 1] = 0;\n          this.score += this.board[row][col];\n\n          col++;\n        }\n      }\n\n      this.board[row] = shiftAndFilter(this.board[row]);\n    }\n\n    const newBoard = JSON.stringify(this.board);\n\n    return oldBoard !== newBoard;\n  }\n\n  moveRight() {\n    const oldBoard = JSON.stringify(this.board);\n\n    const shiftAndFilter = (array) => {\n      const filteredArray = array.filter((cell) => cell !== 0);\n\n      while (filteredArray.length < 4) {\n        filteredArray.unshift(0);\n      }\n\n      return filteredArray;\n    };\n\n    for (let row = 0; row < 4; row++) {\n      this.board[row] = shiftAndFilter(this.board[row]);\n\n      for (let col = 0; col < 3; col++) {\n        if (this.board[row][col] === this.board[row][col + 1]) {\n          this.board[row][col] += this.board[row][col + 1];\n          this.board[row][col + 1] = 0;\n          this.score += this.board[row][col];\n\n          col++;\n        }\n      }\n\n      this.board[row] = shiftAndFilter(this.board[row]);\n    }\n\n    const newBoard = JSON.stringify(this.board);\n\n    return oldBoard !== newBoard;\n  }\n\n  moveUp() {\n    const oldBoard = JSON.stringify(this.board);\n\n    const shiftAndFilter = (array) => {\n      const filteredArray = array.filter((cell) => cell !== 0);\n\n      while (filteredArray.length < 4) {\n        filteredArray.push(0);\n      }\n\n      return filteredArray;\n    };\n\n    for (let col = 0; col < 4; col++) {\n      let column = [];\n\n      for (let row = 0; row < 4; row++) {\n        column.push(this.board[row][col]);\n      }\n\n      column = shiftAndFilter(column);\n\n      for (let r = 0; r < 3; r++) {\n        if (column[r] === column[r + 1]) {\n          column[r] += column[r + 1];\n          column[r + 1] = 0;\n          this.score += column[r];\n\n          r++;\n        }\n      }\n\n      column = shiftAndFilter(column);\n\n      for (let rowIndex = 0; rowIndex < 4; rowIndex++) {\n        this.board[rowIndex][col] = column[rowIndex];\n      }\n    }\n\n    const newBoard = JSON.stringify(this.board);\n\n    return oldBoard !== newBoard;\n  }\n\n  moveDown() {\n    const oldBoard = JSON.stringify(this.board);\n\n    const shiftAndFilter = (array) => {\n      const filteredArray = array.filter((cell) => cell !== 0);\n\n      while (filteredArray.length < 4) {\n        filteredArray.push(0);\n      }\n\n      return filteredArray;\n    };\n\n    for (let col = 0; col < 4; col++) {\n      let column = [];\n\n      for (let row = 0; row < 4; row++) {\n        column.push(this.board[row][col]);\n      }\n\n      column.reverse();\n      column = shiftAndFilter(column);\n\n      for (let r = 0; r < 3; r++) {\n        if (column[r] === column[r + 1]) {\n          column[r] += column[r + 1];\n          column[r + 1] = 0;\n          this.score += column[r];\n\n          r++;\n        }\n      }\n\n      column = shiftAndFilter(column);\n      column.reverse();\n\n      for (let rowIndex = 0; rowIndex < 4; rowIndex++) {\n        this.board[rowIndex][col] = column[rowIndex];\n      }\n    }\n\n    const newBoard = JSON.stringify(this.board);\n\n    return oldBoard !== newBoard;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 2048) {\n          this.status = 'win';\n\n          return this.status;\n        }\n      }\n    }\n\n    const hasEmptyTiles = this.board.some((row) => row.includes(0));\n\n    if (!hasEmptyTiles) {\n      const canMove = (board) => {\n        for (let row = 0; row < 4; row++) {\n          for (let col = 0; col < 4; col++) {\n            if (\n              (col < 3 && board[row][col] === board[row][col + 1]) ||\n              (row < 3 && board[row][col] === board[row + 1][col])\n            ) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      };\n\n      if (!canMove(this.board)) {\n        this.status = 'lose';\n\n        return this.status;\n      }\n    }\n\n    return this.status;\n  }\n\n  start() {\n    if (this.status === 'idle') {\n      this.board = [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ];\n\n      this.score = 0;\n    }\n\n    this.status = 'playing';\n\n    this.addRandomTiles();\n    this.addRandomTiles();\n  }\n\n  restart() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  addRandomTiles() {\n    const emptyTiles = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          emptyTiles.push({ row, col });\n        }\n      }\n    }\n\n    const randomCell =\n      emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n\n    this.board[randomCell.row][randomCell.col] = Math.random() < 0.9 ? 2 : 4;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","length","instance","TypeError","board","score","status","key","value","oldBoard","JSON","stringify","shiftAndFilter","array","filteredArray","filter","cell","push","row","col","unshift","column","r","rowIndex","reverse","some","includes","canMove","addRandomTiles","emptyTiles","randomCell","Math","floor","random","$4fc75ccb937ab1df$var$_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","Constructor","prototype","$197cd56b15c33885$var$mainScore","document","querySelector","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$renderGame","boardState","getState","cells","querySelectorAll","forEach","index","textContent","className","classList","add","concat","getScore","gameStatus","getStatus","toggle","addEventListener","contains","start","remove","restart","gameEvent","preventDefault","moved","oldBoardState","moveUp","moveDown","moveLeft","moveRight","newBoardState"],"version":3,"file":"2048-game.63b28bbb.js.map"}